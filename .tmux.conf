# assume tmux is running in a terminal emulator that supports 256 colors
# set -g default-terminal "screen-256color"

set -g default-terminal "${TERM}" # make tmux inherit the same terminal settings as the shell it is running in
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Configure True Color and RGB support
set -ag terminal-overrides ",xterm-256color*:Tc"
set -ag terminal-overrides ",xterm-256color*:RGB"


# Bigger scrollback buffer
set -g history-limit 10000

# enable focus-events according to nvim checkhealth
set-option -g focus-events on

# lower default prefix repeat timeout delay
set-option -g repeat-time 300

# prevent cursor delay when switching modes in vim
set -sg escape-time 0

# Change Default TMUX Prefix to "Ctrl-a"
set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

# don't ask for confirmation when killing windows/panes
bind-key -r & kill-window
bind-key -r x kill-pane

# Change keybinds for splitting windows
unbind %
bind | split-window -h -c '#{pane_current_path}' # horizontal split in cwd

unbind '"'
bind \\ split-window -v -c '#{pane_current_path}' # vertical split in cwd

bind _ split-window -h # horizontal split in home directory
bind - split-window -v # horizontal split in home directory

# Create new window in same directory
bind C new-window -c "#{pane_current_path}"

# Add keybind for easily refreshing tmux configuration
unbind r
bind r source-file ~/.tmux.conf

# # Add keybind for vim-like pane switching
# bind k select-pane -U 
# bind j select-pane -D 
# bind h select-pane -L 
# bind l select-pane -R 

# Add keybinds for easily resizing tmux panes
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

# Add keybind for maximizing and minimizing tmux pane
bind -r m resize-pane -Z

# Enable the mouse in tmux
set -g mouse on

# Configure vim movements for tmux's copy mode
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging with mouse

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"
bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Restore ability to clear screen (conflict with vim-tmux-navigator)
bind C-l send-keys 'C-l'
# Restore SIGQUIT
bind C-\\ send-keys 'C-\'

# Toggle tmux statusline
bind S set-option -g status

### PLUGINS (Add and configure tmux plugins with tpm)

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

# list of tmux plugins
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

set -g @resurrect-capture-pane-contents 'on' # allow tmux-ressurect to capture pane contents
set -g @resurrect-processes '"btop" "nvim->nvim +\"SessionManager load_last_session\""' # restore last nvim session
# set -g @continuum-restore 'on' # enable tmux-continuum functionality

### THEMES

# set-option -g status-position top # Set status bar position to top
# set-option -g status-style bg=default # Set status bar color to match background

# Catppuccin
# set -g @plugin 'catppuccin/tmux'

# # Tokyonight-night
# set -g mode-style "fg=#7aa2f7,bg=#3b4261"
#
# set -g message-style "fg=#7aa2f7,bg=#3b4261"
# set -g message-command-style "fg=#7aa2f7,bg=#3b4261"
#
# set -g pane-border-style "fg=#3b4261"
# set -g pane-active-border-style "fg=#7aa2f7"
#
# set -g status "on"
# set -g status-justify "left"
#
# set -g status-style "fg=#7aa2f7,bg=#16161e"
#
# set -g status-left-length "100"
# set -g status-right-length "100"
#
# set -g status-left-style NONE
# set -g status-right-style NONE
#
# set -g status-left "#[fg=#15161e,bg=#7aa2f7,bold] #S #[fg=#7aa2f7,bg=#16161e,nobold,nounderscore,noitalics]"
# set -g status-right "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#16161e] #{prefix_highlight} #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261] %Y-%m-%d  %I:%M %p #[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#15161e,bg=#7aa2f7,bold] #h "
#
# setw -g window-status-activity-style "underscore,fg=#a9b1d6,bg=#16161e"
# setw -g window-status-separator ""
# setw -g window-status-style "NONE,fg=#a9b1d6,bg=#16161e"
# setw -g window-status-format "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[default] #I  #W #F #[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]"
# setw -g window-status-current-format "#[fg=#16161e,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261,bold] #I  #W #F #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]"
#
# # tmux-plugins/tmux-prefix-highlight support
# set -g @prefix_highlight_output_prefix "#[fg=#e0af68]#[bg=#16161e]#[fg=#16161e]#[bg=#e0af68]"
# set -g @prefix_highlight_output_suffix ""
#
# # End of Tokyonight-night

# Catppuccin-night
set -g mode-style "fg=#BB9AF7,bg=#3b4261"

set -g message-style "fg=#BB9AF7,bg=#3b4261"
set -g message-command-style "fg=#BB9AF7,bg=#3b4261"

set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "fg=#BB9AF7"

set -g status "on"
set -g status-justify "left"

set -g status-style "fg=#BB9AF7,bg=#16161e"

set -g status-left-length "100"
set -g status-right-length "100"

set -g status-left-style NONE
set -g status-right-style NONE

set -g status-left "#[fg=#15161e,bg=#BB9AF7,bold] #S #[fg=#BB9AF7,bg=#16161e,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#BB9AF7,bg=#16161e] #{prefix_highlight} #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#BB9AF7,bg=#3b4261] %Y-%m-%d  %I:%M %p #[fg=#BB9AF7,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#15161e,bg=#BB9AF7,bold] #h "

setw -g window-status-activity-style "underscore,fg=#a9b1d6,bg=#16161e"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#a9b1d6,bg=#16161e"
setw -g window-status-format "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[default] #I  #W #F #[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=#16161e,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#BB9AF7,bg=#3b4261,bold] #I  #W #F #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]"

# tmux-plugins/tmux-prefix-highlight support
set -g @prefix_highlight_output_prefix "#[fg=#e0af68]#[bg=#16161e]#[fg=#16161e]#[bg=#e0af68]"
set -g @prefix_highlight_output_suffix ""

# End of Catppuccin-night

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
