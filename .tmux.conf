# Assume tmux is running in a terminal emulator that supports 256 colors
set -g default-terminal "xterm-256color"

# set -g default-terminal "${TERM}" # make tmux inherit the same terminal settings as the shell it is running in

set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Configure RGB and True Color support
set -as terminal-features ",*:RGB"
set -ag terminal-overrides ",*:Tc"

# Enable support for extended key sequences
set -s extended-keys on
# set -as terminal-features 'xterm*:extkeys'

# Enable support for hyperlinks (OSC 8)
set -ga terminal-features ",*:hyperlinks"

# Bigger scrollback buffer
set -g history-limit 10000

# Automatically renumber windows when one is removed
set -g renumber-windows on

# Enable focus-events according to nvim checkhealth
set -g focus-events on

# Lower default prefix repeat timeout delay
set -g repeat-time 300

# Prevent cursor delay when switching modes in vim
set -sg escape-time 0

# Change Default TMUX Prefix to "Ctrl-space"
set -g prefix C-space
unbind C-b
bind C-space send-prefix

# Don't ask for confirmation when killing windows/panes
bind -r & kill-window
bind -r x kill-pane

# Don't require repetition of the prefix key for rapid window switching
bind -r p previous-window
bind -r n next-window

# Change keybinds for splitting windows
unbind %
bind | split-window -h -c '#{pane_current_path}' # horizontal split in cwd

unbind '"'
bind \\ split-window -v -c '#{pane_current_path}' # vertical split in cwd

bind _ split-window -h -c $HOME # horizontal split in home directory
bind - split-window -v -c $HOME # horizontal split in home directory

# Create a new window in the home directory
bind c new-window -c $HOME

# Create new window in same directory
bind C new-window -c "#{pane_current_path}"

# Add keybind for vim-like pane switching
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# Add keybinds for easily resizing tmux panes
bind -r down resize-pane -D 5
bind -r up resize-pane -U 5
bind -r right resize-pane -R 5
bind -r left resize-pane -L 5

# Add keybind for maximizing and minimizing tmux pane
bind -r m resize-pane -Z

# Add keybind to toggle a floating window
bind "'" if-shell -F '#{==:#{session_name},scratch}' { 
    detach-client 
  } { 
    if-shell "tmux has-session -t scratch" {
      popup -E "tmux attach-session -t scratch"
    } {
      popup -E "tmux new-session -d -c '#{pane_current_path}' -s scratch && tmux set-option -t scratch status off && tmux attach-session -t scratch"
    }
}

# Enable the mouse in tmux
set -g mouse on

# Configure vim movements for tmux's copy mode
setw -g mode-keys vi

bind -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging with mouse

# Toggle tmux statusline
# bind S run-shell "if [ \"\$(tmux show-option -g status)\" = \"status 2\" ]; then tmux set-option -g status off; else tmux set-option -g status 2; fi"
bind S set-option -g status

### PLUGINS (Add and configure tmux plugins with tpm)

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

# List of tmux plugins
set -g @plugin 'tmux-plugins/tmux-sensible' # a set of sensible tmux options
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes
set -g @plugin 'spywhere/tmux-named-snapshot' # saved named sessions that can be restored later
set -g @plugin 'abhinav/tmux-fastcopy' # quickly copy important pieces of text in a tmux pane
set -g @plugin 'catppuccin/tmux#v2.1.2' # See https://github.com/catppuccin/tmux/tags for additional tags
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'

# Plugin configuration
set -g @resurrect-capture-pane-contents 'on' # allow tmux-ressurect to capture pane contents
set -g @resurrect-processes '"btop" "nvim->vi \"+lua require(\\\"resession\\\").load(vim.fn.getcwd(), { dir = \\\"dirsession\\\" })\""' # restore last nvim session
# set -g @continuum-restore 'on' # enable tmux-continuum functionality
set -g @fastcopy-action 'tmux load-buffer -w -' # allow tmux-fastcopy to copy to clipboard

# Configure the catppuccin plugin
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_window_status_style "rounded"

# Load catppuccin
run ~/.tmux/plugins/tmux/catppuccin.tmux

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
set -agF status-right "#{E:@catppuccin_status_cpu}"
set -ag status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_uptime}"
set -agF status-right "#{E:@catppuccin_status_battery}"

## End of Detailed Catppuccin Statusline ##

# Automatically install tpm if it is not already present on the system
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize tmux plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

